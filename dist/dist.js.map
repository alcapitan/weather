{
  "version": 3,
  "sources": ["../src/main.js"],
  "sourcesContent": ["/* ATUI Features */\natuiKernel_FooterLastedited(1, 6, 2023);\n\n/* ATUI patch */\n\nfunction showSuggestedResults(data) {\n    const containerElement = document.getElementById(\"suggestions\");\n    let list = containerElement.querySelector(\"ul\");\n\n    /* Create list if not exist */\n    if (!list) {\n        list = document.createElement(\"ul\");\n        containerElement.appendChild(list);\n    }\n\n    /* Clean items */\n    while (list.firstChild) {\n        list.removeChild(list.firstChild);\n    }\n\n    /* If there is no matching city */\n    if (data.length == 0) {\n        const item = document.createElement(\"li\");\n        item.innerText = \"No matching city.\";\n        list.appendChild(item);\n    }\n\n    /* Add matching cities */\n    for (let counter = 0; counter < data.length; counter++) {\n        const item = document.createElement(\"li\");\n        item.innerText = data[counter][0];\n        item.onclick = () => {\n            sendRequest(data[counter][1]);\n        };\n        list.appendChild(item);\n    }\n}\n\n/* Link searchbar to sending process */\nconst searchButton = document.getElementById(\"atuiSearchservices_Submit\");\nsearchButton.addEventListener(\"click\", createRequest);\n\ndocument.addEventListener(\"keyup\", pressEnter);\nfunction pressEnter(e) {\n    if (e.code == \"Enter\") {\n        e.preventDefault();\n        createRequest();\n    }\n}\n\n/* Logs */\nconst logText = document.getElementById(\"log\");\nlogText.innerHTML = \"Recherchez une ville en France métropolitaine.\";\nfunction log(message) {\n    document.getElementById(\"backgroundToday\").style.background = \"hsl(var(--atuiKernel_Color-A30))\";\n    logText.innerHTML = message;\n    logText.style.display = \"block\";\n    document.getElementById(\"today\").style.display = \"none\";\n    document.getElementById(\"table\").style.display = \"none\";\n}\n\n/* Searchbar */\nlet inputCity = document.getElementById(\"atuiSearchservices_Input\");\ninputCity.addEventListener(\"input\", function () {\n    updateSuggestions(inputCity.value);\n});\n\nfunction createRequest() {\n    // Get infos with non-suggested search\n    if (!navigator.onLine) {\n        log(\"Non connecté à Internet.\");\n        return;\n    }\n    sendRequest(inputCity.value);\n}\n\n/* Common requests */\nconst requestHeader = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: \"Bearer 8d432d87acf6b2a4e36ee21cd41d5821cb1db3133b673e79dd0f6f0b80cca53f\",\n});\nconst token = \"8d432d87acf6b2a4e36ee21cd41d5821cb1db3133b673e79dd0f6f0b80cca53f\";\n\n/* Update suggestions */\n\nasync function updateSuggestions(search) {\n    document.getElementById(\"backgroundToday\").style.background = \"hsl(var(--atuiKernel_Color-A30))\";\n    log(\"Recherche de villes (0/2)\");\n    let response;\n    try {\n        response = await fetch(`https://api.meteo-concept.com/api/location/cities?token=${token}&search=${search}`, {\n            method: \"GET\",\n            headers: requestHeader,\n            mode: \"cors\",\n        });\n    } catch {\n        log(\"Le service de l'API est indisponible.\");\n    }\n    const content = await response.json(); // Converti la réponse en JSON\n    log(\"Traitement (1/2)\");\n    /* Number of results */\n    let nb_cities = content.cities[\"length\"];\n    if (nb_cities > 5) {\n        nb_cities = 5;\n    }\n    let suggested = [];\n    let result;\n    for (let counter = 0; counter < nb_cities; counter++) {\n        try {\n            result = [\n                content.cities[counter][\"name\"] + \" (\" + content.cities[counter][\"cp\"] + \")\",\n                content.cities[counter][\"cp\"],\n            ];\n        } catch {\n            result = \"\";\n        }\n        suggested.push(result);\n    }\n    showSuggestedResults(suggested);\n    log(\"Sélectionnez une ville.\");\n}\n\n/* Send requests */\n\nasync function sendRequest(city) {\n    // Recherche des villes\n    document.getElementById(\"backgroundToday\").style.background = \"hsl(var(--atuiKernel_Color-A30))\";\n    log(\"Recherche des villes (0/3)\");\n    let response;\n    try {\n        response = await fetch(`https://api.meteo-concept.com/api/location/cities?token=${token}&search=${city}`, {\n            method: \"GET\",\n            headers: requestHeader,\n            mode: \"cors\",\n        });\n    } catch {\n        log(\"Le service de l'API est indisponible.\");\n    }\n    const content = await response.json(); // Converti la réponse en JSON\n    if (content.cities[\"length\"] == 0) {\n        log(\"Aucune ville trouvée.\");\n        return;\n    }\n\n    // Réception des infos sur la ville\n    log(\"Réception des données météo (1/3)\");\n    const insee = content.cities[0][\"insee\"]; // Révèle l'INSEE de la ville en premier résultat\n    try {\n        response = await fetch(`https://api.meteo-concept.com/api/forecast/daily?token=${token}&insee=${insee}`, {\n            method: \"GET\",\n            headers: requestHeader,\n            mode: \"cors\",\n        });\n    } catch {\n        log(\"Le service de l'API est indisponible.\");\n    }\n    let contentInsee = await response.json(); // Converti la réponse en JSON\n\n    // Organisation des données\n    log(\"Traitement (2/3)\");\n    city = contentInsee.city[\"name\"] + \" (\" + contentInsee.city[\"cp\"] + \")\";\n    let result = []; // Créé un objet avec toutes les infos nécessaires\n    for (let i = 0; i < 8; i++) {\n        result[i] = {};\n        contentInsee.forecast[i][\"datetime\"] = new Date(contentInsee.forecast[i][\"datetime\"]);\n        result[i][\"date\"] = [\n            convertDay(contentInsee.forecast[i][\"datetime\"].getDay()),\n            contentInsee.forecast[i][\"datetime\"].getDate(),\n            convertMonth(contentInsee.forecast[i][\"datetime\"].getMonth()),\n        ];\n        result[i][\"kmwind\"] = contentInsee.forecast[i][\"wind10m\"];\n        result[i][\"kmgust\"] = contentInsee.forecast[i][\"gust10m\"];\n        result[i][\"dirwind\"] = contentInsee.forecast[i][\"dirwind10m\"] + 180;\n        result[i][\"weather\"] = contentInsee.forecast[i][\"weather\"];\n        result[i][\"temp\"] = (contentInsee.forecast[i][\"tmin\"] + contentInsee.forecast[i][\"tmax\"]) / 2;\n        result[i][\"tempmin\"] = contentInsee.forecast[i][\"tmin\"];\n        result[i][\"tempmax\"] = contentInsee.forecast[i][\"tmax\"];\n        result[i][\"probarain\"] = contentInsee.forecast[i][\"probarain\"];\n        result[i][\"rr10\"] = contentInsee.forecast[i][\"rr10\"];\n    }\n    console.info(result);\n    updateWebpage(result, city);\n}\n\n/* Convert dates from number to string */\nfunction convertDay(num) {\n    const transform = {\n        0: \"Dimanche\",\n        1: \"Lundi\",\n        2: \"Mardi\",\n        3: \"Mercredi\",\n        4: \"Jeudi\",\n        5: \"Vendredi\",\n        6: \"Samedi\",\n    };\n    return transform[num];\n}\n\nfunction convertMonth(num) {\n    const transform = {\n        0: \"Janvier\",\n        1: \"Février\",\n        2: \"Mars\",\n        3: \"Avril\",\n        4: \"Mai\",\n        5: \"Juin\",\n        6: \"Juillet\",\n        7: \"Août\",\n        8: \"Septembre\",\n        9: \"Octobre\",\n        10: \"Novembre\",\n        11: \"Décembre\",\n    };\n    return transform[num];\n}\n\n/* Converti API numbers to string for user */\nfunction convertInfos(sky) {\n    const transform = {\n        0: [\"sun\", \"ensoleillé\"],\n        1: [\"partly-cloudy\", \"éclaircies\"],\n        2: [\"partly-cloudy\", \"éclaircies\"],\n        3: [\"clouds\", \"nuageux\"],\n        4: [\"clouds\", \"nuageux\"],\n        5: [\"clouds\", \"nuageux\"],\n        6: [\"haze\", \"brouillard\"],\n        7: [\"haze\", \"brouillard\"],\n        10: [\"rain\", \"pluie fine\"],\n        11: [\"heavy-rain\", \"pluie\"],\n        12: [\"torrential-rain\", \"tempête pluvieuse\"],\n        13: [\"rain\", \"pluie fine\"],\n        14: [\"heavy-rain\", \"pluie\"],\n        15: [\"torrential-rain\", \"tempête pluvieuse\"],\n        16: [\"haze\", \"brouillard\"],\n        20: [\"light-snow\", \"neige légère\"],\n        21: [\"snow\", \"neige\"],\n        22: [\"snow-storm\", \"tempête de neige\"],\n        30: [\"rain\", \"pluie fine\"],\n        31: [\"heavy-rain\", \"pluie\"],\n        32: [\"torrential-rain\", \"tempête pluvieuse\"],\n        40: [\"rain\", \"pluie fine\"],\n        41: [\"heavy-rain\", \"pluie\"],\n        42: [\"torrential-rain\", \"tempête pluvieuse\"],\n        43: [\"rain\", \"pluie fine\"],\n        44: [\"heavy-rain\", \"pluie\"],\n        45: [\"torrential-rain\", \"tempête pluvieuse\"],\n        46: [\"rain\", \"pluie fine\"],\n        47: [\"heavy-rain\", \"pluie\"],\n        48: [\"torrential-rain\", \"tempête pluvieuse\"],\n        60: [\"light-snow\", \"neige légère\"],\n        61: [\"snow\", \"neige\"],\n        62: [\"snow-storm\", \"tempête de neige\"],\n        63: [\"light-snow\", \"neige légère\"],\n        64: [\"snow\", \"neige\"],\n        65: [\"snow-storm\", \"tempête de neige\"],\n        66: [\"light-snow\", \"neige légère\"],\n        67: [\"snow\", \"neige\"],\n        68: [\"snow-storm\", \"tempête de neige\"],\n        70: [\"rain\", \"pluie fine\"],\n        71: [\"heavy-rain\", \"pluie\"],\n        72: [\"torrential-rain\", \"tempête pluvieuse\"],\n        73: [\"rain\", \"pluie fine\"],\n        74: [\"heavy-rain\", \"pluie\"],\n        75: [\"torrential-rain\", \"tempête pluvieuse\"],\n        76: [\"rain\", \"pluie fine\"],\n        77: [\"heavy-rain\", \"pluie\"],\n        78: [\"torrential-rain\", \"tempête pluvieuse\"],\n        100: [\"cloud-lighting\", \"orages\"],\n        101: [\"cloud-lighting\", \"orages\"],\n        102: [\"cloud-lighting\", \"orages\"],\n        103: [\"cloud-lighting\", \"orages\"],\n        104: [\"cloud-lighting\", \"orages\"],\n        105: [\"cloud-lighting\", \"orages\"],\n        106: [\"cloud-lighting\", \"orages\"],\n        107: [\"cloud-lighting\", \"orages\"],\n        108: [\"cloud-lighting\", \"orages\"],\n        120: [\"cloud-lighting\", \"orages\"],\n        121: [\"cloud-lighting\", \"orages\"],\n        122: [\"cloud-lighting\", \"orages\"],\n        123: [\"cloud-lighting\", \"orages\"],\n        124: [\"cloud-lighting\", \"orages\"],\n        125: [\"cloud-lighting\", \"orages\"],\n        126: [\"cloud-lighting\", \"orages\"],\n        127: [\"cloud-lighting\", \"orages\"],\n        128: [\"cloud-lighting\", \"orages\"],\n        130: [\"cloud-lighting\", \"orages\"],\n        131: [\"cloud-lighting\", \"orages\"],\n        132: [\"cloud-lighting\", \"orages\"],\n        133: [\"cloud-lighting\", \"orages\"],\n        134: [\"cloud-lighting\", \"orages\"],\n        135: [\"cloud-lighting\", \"orages\"],\n        136: [\"cloud-lighting\", \"orages\"],\n        137: [\"cloud-lighting\", \"orages\"],\n        138: [\"cloud-lighting\", \"orages\"],\n        140: [\"cloud-lighting\", \"orages\"],\n        141: [\"cloud-lighting\", \"orages\"],\n        142: [\"cloud-lighting\", \"orages\"],\n        210: [\"rain\", \"pluie fine\"],\n        211: [\"heavy-rain\", \"pluie\"],\n        212: [\"torrential-rain\", \"tempête pluvieuse\"],\n        220: [\"light-snow\", \"neige légère\"],\n        221: [\"snow\", \"neige\"],\n        222: [\"snow-storm\", \"tempête de neige\"],\n        230: [\"rain\", \"pluie fine\"],\n        231: [\"heavy-rain\", \"pluie\"],\n        232: [\"torrential-rain\", \"tempête pluvieuse\"],\n        235: [\"hail\", \"grêle\"],\n    };\n    return transform[sky];\n}\n\n/*updateWebpage(\n[\n     {\n         \"date\": [\n             \"Mardi\",\n             19,\n             \"Juillet\"\n         ],\n         \"kmwind\": 10,\n         \"kmgust\": 44,\n         \"dirwind\": 196,\n         \"weather\": 0,\n         \"temp\": 30,\n         \"tempmin\": 24,\n         \"tempmax\": 36,\n         \"probarain\": 10,\n         \"rr10\": 0\n     },\n     {\n         \"date\": [\n             \"Mercredi\",\n             20,\n             \"Juillet\"\n         ],\n         \"kmwind\": 10,\n         \"kmgust\": 41,\n         \"dirwind\": 198,\n         \"weather\": 1,\n         \"temp\": 30,\n         \"tempmin\": 24,\n         \"tempmax\": 36,\n         \"probarain\": 10,\n         \"rr10\": 0\n     },\n     {\n         \"date\": [\n             \"Jeudi\",\n             21,\n             \"Juillet\"\n         ],\n         \"kmwind\": 15,\n         \"kmgust\": 31,\n         \"dirwind\": 347,\n         \"weather\": 0,\n         \"temp\": 31,\n         \"tempmin\": 24,\n         \"tempmax\": 38,\n         \"probarain\": 0,\n         \"rr10\": 0\n     },\n     {\n         \"date\": [\n             \"Vendredi\",\n             22,\n             \"Juillet\"\n         ],\n         \"kmwind\": 15,\n         \"kmgust\": 35,\n         \"dirwind\": 173,\n         \"weather\": 2,\n         \"temp\": 31,\n         \"tempmin\": 22,\n         \"tempmax\": 40,\n         \"probarain\": 0,\n         \"rr10\": 0\n     },\n     {\n         \"date\": [\n             \"Samedi\",\n             23,\n             \"Juillet\"\n         ],\n         \"kmwind\": 10,\n         \"kmgust\": 26,\n         \"dirwind\": 227,\n         \"weather\": 3,\n         \"temp\": 29,\n         \"tempmin\": 23,\n         \"tempmax\": 35,\n         \"probarain\": 30,\n         \"rr10\": 0\n     },\n     {\n         \"date\": [\n             \"Dimanche\",\n             24,\n             \"Juillet\"\n         ],\n         \"kmwind\": 15,\n         \"kmgust\": 23,\n         \"dirwind\": 358,\n         \"weather\": 0,\n         \"temp\": 28.5,\n         \"tempmin\": 22,\n         \"tempmax\": 35,\n         \"probarain\": 20,\n         \"rr10\": 0\n     },\n     {\n         \"date\": [\n             \"Lundi\",\n             25,\n             \"Juillet\"\n         ],\n         \"kmwind\": 15,\n         \"kmgust\": 24,\n         \"dirwind\": 330,\n         \"weather\": 0,\n         \"temp\": 29.5,\n         \"tempmin\": 23,\n         \"tempmax\": 36,\n         \"probarain\": 20,\n         \"rr10\": 0\n     },\n     {\n         \"date\": [\n             \"Mardi\",\n             26,\n             \"Juillet\"\n         ],\n         \"kmwind\": 15,\n         \"kmgust\": 24,\n         \"dirwind\": 335,\n         \"weather\": 1,\n         \"temp\": 28.5,\n         \"tempmin\": 23,\n         \"tempmax\": 34,\n         \"probarain\": 30,\n         \"rr10\": 0\n     }\n]);*/\n\n/* Update webpage with data */\nfunction updateWebpage(infos, city) {\n    logText.style.display = \"none\";\n\n    /* Today */\n    document.getElementById(\"today\").style.display = \"flex\";\n    document.getElementById(\"cityToday\").textContent = city;\n\n    // Temperature\n    let temperatureElementMin = document.getElementById(\"tempTodayMin\");\n    temperatureElementMin.textContent = infos[0][\"tempmin\"] + \" °C\";\n    let temperatureElementMax = document.getElementById(\"tempTodayMax\");\n    temperatureElementMax.textContent = infos[0][\"tempmax\"] + \" °C\";\n    if (infos[0][\"temp\"] <= 5) {\n        document.getElementById(\"backgroundToday\").style.background = \"var(--veryCold)\";\n    } else if (infos[0][\"temp\"] <= 15) {\n        document.getElementById(\"backgroundToday\").style.background = \"var(--cold)\";\n    } else if (infos[0][\"temp\"] <= 25) {\n        document.getElementById(\"backgroundToday\").style.background = \"var(--lukewarm)\";\n    } else if (infos[0][\"temp\"] <= 35) {\n        document.getElementById(\"backgroundToday\").style.background = \"var(--hot)\";\n    } else if (infos[0][\"temp\"] >= 36) {\n        document.getElementById(\"backgroundToday\").style.background = \"var(--veryHot)\";\n    }\n\n    // Sky\n    let skyElementImage = document.getElementById(\"skyTodayImg\");\n    skyElementImage.src = \"assets/icons/\" + convertInfos(infos[0][\"weather\"])[0] + \".png\";\n    skyElementImage.alt = \"Icône \" + convertInfos(infos[0][\"weather\"])[1];\n    if (infos[0][\"probarain\"] > 50) {\n        document.getElementById(\"skyTodayProbarain\").style.display = \"block\";\n        document.getElementById(\"skyTodayProbarain\").textContent = infos[0][\"probarain\"] + \" %\";\n        document.getElementById(\"skyTodayAccumurain\").style.display = \"block\";\n        document.getElementById(\"skyTodayAccumurain\").textContent = infos[0][\"rr10\"] + \" mm\";\n    } else {\n        document.getElementById(\"skyTodayProbarain\").style.display = \"none\";\n        document.getElementById(\"skyTodayAccumurain\").style.display = \"none\";\n    }\n\n    // Wind\n    let windElementImage = document.getElementById(\"windTodayImg\");\n    windElementImage.style.transform = \"rotate(\" + infos[0][\"dirwind\"] + \"deg)\";\n    let windElementText = document.getElementById(\"windTodayMin\");\n    windElementText.textContent = infos[0][\"kmwind\"] + \" km/h\";\n    const gustElementText = document.getElementById(\"windTodayMax\");\n    gustElementText.textContent = infos[0][\"kmgust\"] + \" km/h\";\n\n    /* Table */\n    document.getElementById(\"table\").style.display = \"block\";\n    const elementsTable = document.getElementsByClassName(\"nextDay\");\n\n    for (i = 0; i < elementsTable.length; i++) {\n        // Date\n        elementsTable[i].childNodes[1].innerHTML =\n            \"<p>\" + infos[i + 1][\"date\"][0] + \" \" + infos[i + 1][\"date\"][1] + \" \" + infos[i + 1][\"date\"][2] + \"</p>\";\n\n        // Sky & Rain\n        elementsTable[i].childNodes[3].childNodes[1].src =\n            \"assets/icons/\" + convertInfos(infos[i + 1][\"weather\"])[0] + \".png\";\n        elementsTable[i].childNodes[3].childNodes[1].alt = \"Icône \" + convertInfos(infos[i + 1][\"weather\"])[1];\n\n        if (infos[i + 1][\"probarain\"] > 50) {\n            elementsTable[i].childNodes[3].childNodes[3].childNodes[1].style.display = \"block\";\n            elementsTable[i].childNodes[3].childNodes[3].childNodes[1].textContent = infos[i + 1][\"probarain\"] + \" %\";\n            elementsTable[i].childNodes[3].childNodes[3].childNodes[3].style.display = \"block\";\n            elementsTable[i].childNodes[3].childNodes[3].childNodes[3].textContent = infos[i + 1][\"rr10\"] + \" mm\";\n        } else {\n            elementsTable[i].childNodes[3].childNodes[3].childNodes[1].style.display = \"none\";\n            elementsTable[i].childNodes[3].childNodes[3].childNodes[3].style.display = \"none\";\n        }\n\n        // Temperature\n        elementsTable[i].childNodes[5].childNodes[1].textContent = infos[i + 1][\"tempmin\"] + \" °C\";\n        elementsTable[i].childNodes[5].childNodes[3].textContent = infos[i + 1][\"tempmax\"] + \" °C\";\n\n        // Wind\n        elementsTable[i].childNodes[7].childNodes[1].style.transform = \"rotate(\" + infos[i + 1][\"dirwind\"] + \"deg)\";\n        elementsTable[i].childNodes[7].childNodes[3].childNodes[1].textContent = infos[i + 1][\"kmwind\"] + \" km/h\";\n        elementsTable[i].childNodes[7].childNodes[3].childNodes[3].textContent = infos[i + 1][\"kmgust\"] + \" km/h\";\n    }\n}\n"],
  "mappings": "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",
  "names": ["atuiKernel_FooterLastedited", "showSuggestedResults", "data", "containerElement", "document", "getElementById", "list", "querySelector", "createElement", "appendChild", "firstChild", "removeChild", "length", "item", "innerText", "counter", "onclick", "sendRequest", "searchButton", "addEventListener", "createRequest", "pressEnter", "e", "code", "preventDefault", "logText", "innerHTML", "log", "message", "style", "background", "display", "inputCity", "updateSuggestions", "value", "navigator", "onLine", "requestHeader", "Headers", "Accept", "Authorization", "token", "search", "response", "fetch", "method", "headers", "mode", "content", "json", "nb_cities", "cities", "suggested", "result", "push", "city", "insee", "contentInsee", "i", "forecast", "Date", "convertDay", "getDay", "getDate", "convertMonth", "getMonth", "console", "info", "updateWebpage", "num", "convertInfos", "sky", "infos", "textContent", "temperatureElementMin", "temperatureElementMax", "skyElementImage", "src", "alt", "windElementImage", "transform", "windElementText", "gustElementText", "elementsTable", "getElementsByClassName", "childNodes"]
}
